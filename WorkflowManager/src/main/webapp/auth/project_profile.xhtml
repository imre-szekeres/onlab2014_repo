<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:c='http://java.sun.com/jsp/jstl/core'>

	<ui:composition template="../WEB-INF/templates/wm_frame.xhtml">
	   <ui:define name='content_title'>
	       Project #{ projectManager.project.name }
	   </ui:define>
	   
	   <ui:define name='content'>
	       
	       <div id='projectprofile-div'>
	       <h:panelGrid columns='3' >
                <h:outputText value='Name: ' />
                <h:outputText value='#{ projectManager.project.name }' />
                <span></span>
                
                <h:outputText value='Workflow: ' />
                <h:outputText value='#{ projectManager.project.workflow.name }' />
                <span></span>
                
                <h:outputText value='Description: ' />
                <h:inputTextarea readonly='true' value='#{ projectManager.project.description }' styleClass='inputTextAreaClass'/>
                <span></span>
                
                <h:outputText value='State: ' />
                <h:outputText value='#{ projectManager.project.currentState.name}' />
                <span></span>
                
                <h:outputText value="Action"/>
                <h:form prependId='false'>
	                <h:selectOneMenu styleClass='selectMenu' value="#{projectManager.selectedActionType}" converter="#{actionTypeConverter}">
							<f:converter binding="#{actionTypeConverter}" />
					        <f:selectItems value="#{stateManager.getActionTypeList(projectManager.project.currentState)}" var="_at" itemValue="#{_at}" 
						   				itemLabel="#{_at.actionTypeName}" valueChangeListener="#{profileManager.selectedActionTypeChanged}"
						   				onchange="submit()" converter="#{actionTypeConverter}"/>
					</h:selectOneMenu>
					<h:commandButton value="Do action" action="#{projectManager.doAction()}" styleClass='btn'/>
                </h:form>
	       </h:panelGrid>
	       </div>
	       
	       <div id='assignmentdiv-wrapper'>		       
		       <div id='assignedusrs-panel'>
		           <div id='assignedusrs-header'>
		              <h:outputText value='Assigned Users' />
		           </div>
		           <div id='assignedusrs-table'>
			           <h:dataTable value='#{ projectManager.listAssignments() }' var='assignment'>
			               <h:column>
			                   <h:form prependId='false'>
			                       <h:commandLink value='#{ assignment.user.username }' action='#{ profileManager.profileOf( assignment.user ) }' />
			                   </h:form>
			               </h:column>
			               <h:column>
		                       <h:form prependId='false'>
		                           <h:commandButton value='Remove' action='#{ projectManager.unassign(assignment.user, assignment) }' styleClass='btn'/>
		                       </h:form>
		                   </h:column>
			           </h:dataTable>
			       </div>
		       </div>
		       
		       <div id='assignment-div'>
               <h:form prependId='false'>
               <h:panelGrid columns='2' id='assignment-panel'>
                   <h:selectOneMenu value='#{ projectManager.userId }' styleClass='selectMenu'>
                       <c:forEach items='#{ projectManager.filterAssigned( loginManager.listUsers() ) }' var='user'>
                           <f:selectItem itemValue='#{ user.id }' itemLabel='#{ user.username }' />
                       </c:forEach>
                   </h:selectOneMenu>
                   <h:commandButton id='assign-btn' styleClass='cvf-btn btn' value='Assign' action='#{ projectManager.assign() }' />
               </h:panelGrid>
               </h:form>
               </div>
	       </div>
	       
	       <div id='projectcomments-div'>
	       <!-- TODO: view comments -->
	           <div id='projectcomments-panel'>
	           
	               <div id='projectcomments-body'>
	               <h:dataTable value='#{ commentManager.listCommentsFor( projectManager.project ) }' var='comment' >
	                   <h:column>
	                       <h:form prependId='false'>
	                           <h:commandLink id='profileof-link' value='#{ comment.user.username }' action='#{ profileManager.profileOf( comment.user ) }' ></h:commandLink>
	                       </h:form>
	                   </h:column>
	                   <h:column>
	                       <h:outputText value=' commented on ' />
	                   </h:column>
	                   <h:column>
	                       <h:outputText value='#{ comment.postDate }' >
	                           <f:convertDateTime pattern='yyyy.MM.dd HH:mm' />
	                       </h:outputText>
	                   </h:column>
	                   <h:column>
	                       <h:inputTextarea readonly='true' value='#{ comment.description }' styleClass='inputTextAreaClass'/>
	                   </h:column>
                       <h:column rendered="#{ sessionScope.subject.hasRole('administrator') or sessionScope.subject.equals( comment.user ) }" >
                           <h:form prependId='false' >
                               <h:commandLink id='removec-link' value='Remove' action='#{commentManager.remove( comment )}' styleClass='cvf-link' />
                           </h:form>
                       </h:column>
	               </h:dataTable>
                   </div>
	               <div id='newcomment-div'>
	                   <h:form prependId='false'>
	                       <h:outputText value='#{ sessionScope.subject.username }: ' />
	                       <h:inputText value='#{ commentManager.comment.description }' required='false' styleClass='inputTextClass'/>
	                       <h:commandButton id='createc-btn' value='Comment' action='#{ commentManager.createFor( projectManager.project, sessionScope.subject ) }' styleClass='cvf-btn btn' />
	                   </h:form>
	               </div>
	           </div>
	       </div>
	   </ui:define>
	</ui:composition>
</html>